{"ast":null,"code":"var _jsxFileName = \"/Users/Yeah/Downloads/web_scraping_hackathon-main/front-end/src/components/AddStock.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddStock(_ref) {\n  _s();\n  let {\n    userPickedStocks,\n    stocksDatabase,\n    updateStocksDatabase,\n    updateUserPickedStocks,\n    displayedIndustries,\n    updateDisplayedIndustries\n  } = _ref;\n  // const [curStockToAdd, updateCurrentStockToAdd] = useState({});\n\n  async function addStock(stock) {\n    setMessage(\"Please wait a moment while we retrieve the stock.....\");\n    for (let i = 0; i < userPickedStocks.length; i++) {\n      if (userPickedStocks[i].name === stock) {\n        setMessage(stock + \" was previously added. Please choose another.\");\n        return;\n      }\n    }\n    for (let i = 0; i < stocksDatabase.length; i++) {\n      var curTicker = stocksDatabase[i].ticker;\n      if (stocksDatabase[i].name === stock) {\n        var timeNow = Date.now();\n        console.log(timeNow - stocksDatabase[i].lastUpdated);\n        if (timeNow - stocksDatabase[i].lastUpdated > 10800000) {\n          console.log(\"Update required\");\n          await fetch(`http://localhost:5001/update/${curTicker}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"http://localhost:3000/\"\n            },\n            body: JSON.stringify(stocksDatabase[i])\n          }).catch(error => {\n            window.alert(error);\n            return;\n          });\n        } else {\n          console.log(\"No update required\");\n        }\n        const curStockToAdd = await getRecords(curTicker);\n        console.log(curStockToAdd);\n        var copyOfDisplayedIndustries = displayedIndustries;\n        if (curStockToAdd.industry in copyOfDisplayedIndustries) {\n          copyOfDisplayedIndustries[curStockToAdd.industry].push(curStockToAdd);\n        } else {\n          copyOfDisplayedIndustries[curStockToAdd.industry] = [curStockToAdd];\n        }\n        updateDisplayedIndustries(copyOfDisplayedIndustries);\n        updateUserPickedStocks(userPickedStocks => [...userPickedStocks, curStockToAdd]);\n        setMessage(stock + \" successfully added below.\");\n        console.log(displayedIndustries);\n        return;\n\n        // var copyOfDisplayedIndustries = displayedIndustries;\n\n        // if (stocksDatabase[i].industry in copyOfDisplayedIndustries){\n        //     copyOfDisplayedIndustries[stocksDatabase[i].industry].push(stocksDatabase[i]);\n\n        // } else {\n        //     copyOfDisplayedIndustries[stocksDatabase[i].industry] = [stocksDatabase[i]];\n        // }\n\n        // updateDisplayedIndustries(copyOfDisplayedIndustries);\n        // updateUserPickedStocks(userPickedStocks =>[...userPickedStocks, stocksDatabase[i]]);\n        // setMessage(stock + \" successfully added below.\");\n        // console.log(displayedIndustries);\n        // return;\n      }\n    }\n\n    console.log(userPickedStocks);\n  }\n  async function getRecords(curTicker) {\n    const response = await fetch(`http://localhost:5001/record/${curTicker}`);\n\n    // if (!response.ok) {\n    //   const message = `An error occurred: ${response.statusText}`;\n    //   window.alert(message);\n    //   return;\n    // }\n\n    const records = await response.json();\n    console.log(records);\n    return records;\n  }\n  const [message, setMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addStockMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addStockTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Add stock to compare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 22\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"addStock\",\n        onChange: e => addStock(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), stocksDatabase.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: stock.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addStockMessage\",\n      children: [\" \", message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n_s(AddStock, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = AddStock;\nexport default AddStock;\nvar _c;\n$RefreshReg$(_c, \"AddStock\");","map":{"version":3,"names":["React","useState","AddStock","userPickedStocks","stocksDatabase","updateStocksDatabase","updateUserPickedStocks","displayedIndustries","updateDisplayedIndustries","addStock","stock","setMessage","i","length","name","curTicker","ticker","timeNow","Date","now","console","log","lastUpdated","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","curStockToAdd","getRecords","copyOfDisplayedIndustries","industry","push","response","records","json","message","e","target","value","map"],"sources":["/Users/Yeah/Downloads/web_scraping_hackathon-main/front-end/src/components/AddStock.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AddStock({userPickedStocks, stocksDatabase, updateStocksDatabase, updateUserPickedStocks, \n    displayedIndustries, updateDisplayedIndustries }) {\n    \n\n    // const [curStockToAdd, updateCurrentStockToAdd] = useState({});\n\n   async function addStock(stock){\n\n    setMessage(\"Please wait a moment while we retrieve the stock.....\")\n\n    for (let i = 0; i < userPickedStocks.length; i++){\n\n        if (userPickedStocks[i].name === stock){\n            setMessage(stock + \" was previously added. Please choose another.\");\n            return;\n        }\n    }\n\n        for (let i = 0; i < stocksDatabase.length; i++){\n\n            var curTicker = stocksDatabase[i].ticker;\n            if (stocksDatabase[i].name === stock){\n\n\n                var timeNow = Date.now();\n                console.log(timeNow - stocksDatabase[i].lastUpdated);\n                if ((timeNow - stocksDatabase[i].lastUpdated) > 10800000){\n\n                    console.log(\"Update required\");\n\n                    await fetch(`http://localhost:5001/update/${curTicker}`, {\n                        method: \"POST\",\n                        headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Access-Control-Allow-Origin\": \"http://localhost:3000/\"\n                        },\n                        body: JSON.stringify(stocksDatabase[i]),\n                    })\n                    .catch(error => {\n                        window.alert(error);\n                        return;\n                    });\n                \n                } else {\n                    console.log(\"No update required\");\n                }\n\n                  \n                  const curStockToAdd = await getRecords(curTicker);\n                  console.log(curStockToAdd);\n                  var copyOfDisplayedIndustries = displayedIndustries;\n                \n                  if (curStockToAdd.industry in copyOfDisplayedIndustries){\n                      copyOfDisplayedIndustries[curStockToAdd.industry].push(curStockToAdd);\n  \n                  } else {\n                      copyOfDisplayedIndustries[curStockToAdd.industry] = [curStockToAdd];\n                  }\n  \n                  updateDisplayedIndustries(copyOfDisplayedIndustries);\n                  updateUserPickedStocks(userPickedStocks =>[...userPickedStocks, curStockToAdd]);\n                  setMessage(stock + \" successfully added below.\");\n                  console.log(displayedIndustries);\n                  return;\n\n                // var copyOfDisplayedIndustries = displayedIndustries;\n                \n                // if (stocksDatabase[i].industry in copyOfDisplayedIndustries){\n                //     copyOfDisplayedIndustries[stocksDatabase[i].industry].push(stocksDatabase[i]);\n\n                // } else {\n                //     copyOfDisplayedIndustries[stocksDatabase[i].industry] = [stocksDatabase[i]];\n                // }\n\n                // updateDisplayedIndustries(copyOfDisplayedIndustries);\n                // updateUserPickedStocks(userPickedStocks =>[...userPickedStocks, stocksDatabase[i]]);\n                // setMessage(stock + \" successfully added below.\");\n                // console.log(displayedIndustries);\n                // return;\n\n            }\n        }\n        \n        console.log(userPickedStocks);\n   }\n\n   async function getRecords(curTicker) {\n    const response = await fetch(`http://localhost:5001/record/${curTicker}`);\n\n    // if (!response.ok) {\n    //   const message = `An error occurred: ${response.statusText}`;\n    //   window.alert(message);\n    //   return;\n    // }\n\n    const records = await response.json();\n    console.log(records);\n    \n    return records;\n  }\n\n   const [message, setMessage] = useState(\"\");\n\n    return (\n      <div className=\"addStockMain\">\n  \n        <div className=\"addStockTitle\">\n\n           \n            <label>  <h5>Add stock to compare</h5> </label>\n\n            <select name = \"addStock\" \n        onChange={e => addStock(e.target.value)}>\n                <option></option>\n                {stocksDatabase.map((stock) => <option>{stock.name}</option>)}\n            </select>\n                \n\n        </div>\n\n        <div className = \"addStockMessage\"> {message} </div>\n\n      </div>\n    );\n  }\n  \n  export default AddStock;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}