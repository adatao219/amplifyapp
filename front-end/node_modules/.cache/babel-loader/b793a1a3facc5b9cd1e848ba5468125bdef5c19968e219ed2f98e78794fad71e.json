{"ast":null,"code":"var _jsxFileName = \"/Users/Yeah/Downloads/web_scraping_hackathon-main/front-end/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport StockBox from '../components/StockBox.js';\nimport AddStock from '../components/AddStock.js';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Homepage() {\n  _s();\n  // const startUserPickedStocks = [\n\n  //     {name: 'Apple', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Microsoft', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Google', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n\n  // ]\n\n  // const stocksDatabase = [\n  //     {name: 'Apple', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Microsoft', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Google', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Amazon', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Netflix', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n  //     {name: 'Meta', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n\n  // ]\n\n  const [userPickedStocks, updateUserPickedStocks] = useState([]);\n  const [stocksDatabase, updateStocksDatabase] = useState([]);\n  const [displayedIndustries, updateDisplayedIndustries] = useState({});\n  const [industries, updateIndustries] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5001/record/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      //  console.log(records);\n      updateStocksDatabase(records);\n      //  console.log(stocksDatabase);\n    }\n\n    getRecords();\n    //  console.log(userPickedStocks);\n    var copyIndustries = [];\n    Object.entries(displayedIndustries).forEach(_ref => {\n      let [industry, stocks] = _ref;\n      return copyIndustries.push(industry);\n    });\n    updateIndustries(copyIndustries);\n    return;\n  }, [userPickedStocks, displayedIndustries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepageMain\",\n    children: [/*#__PURE__*/_jsxDEV(AddStock, {\n      userPickedStocks: userPickedStocks,\n      updateUserPickedStocks: updateUserPickedStocks,\n      stocksDatabase: stocksDatabase,\n      updateStocksDatabase: updateStocksDatabase,\n      displayedIndustries: displayedIndustries,\n      updateDisplayedIndustries: updateDisplayedIndustries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stockHomepage\",\n      children: industries.map(industry => /*#__PURE__*/_jsxDEV(StockBox, {\n        userPickedStocks: userPickedStocks,\n        updateUserPickedStocks: updateUserPickedStocks,\n        displayedIndustries: displayedIndustries,\n        updateDisplayedIndustries: updateDisplayedIndustries,\n        industry: industry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Homepage, \"Irhda8f256USVqK8Q6pqBdzlUA4=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["StockBox","AddStock","React","useState","useEffect","Homepage","userPickedStocks","updateUserPickedStocks","stocksDatabase","updateStocksDatabase","displayedIndustries","updateDisplayedIndustries","industries","updateIndustries","getRecords","response","fetch","ok","message","statusText","window","alert","records","json","copyIndustries","Object","entries","forEach","industry","stocks","push","map"],"sources":["/Users/Yeah/Downloads/web_scraping_hackathon-main/front-end/src/pages/Homepage.js"],"sourcesContent":["\n\nimport StockBox from '../components/StockBox.js'\nimport AddStock from '../components/AddStock.js'\nimport React, { useState, useEffect } from 'react';\n\nfunction Homepage() {\n\n    // const startUserPickedStocks = [\n\n    //     {name: 'Apple', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Microsoft', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Google', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n     \n    // ]\n   \n     \n    // const stocksDatabase = [\n    //     {name: 'Apple', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Microsoft', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Google', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Amazon', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Netflix', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n    //     {name: 'Meta', curPrice: 'USD1.00', industry: 'Technology', metrics: [['Sales growth', '50%']]},\n\n    // ]\n    \n    const [userPickedStocks, updateUserPickedStocks] = useState([])\n    const [stocksDatabase, updateStocksDatabase] = useState([])\n    const [displayedIndustries, updateDisplayedIndustries] = useState({})\n    const [industries, updateIndustries] = useState([])\n\n \n // This method fetches the records from the database.\n useEffect(() => {\n   async function getRecords() {\n\n     const response = await fetch(`http://localhost:5001/record/`);\n     \n     if (!response.ok) {\n       const message = `An error occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const records = await response.json();\n    //  console.log(records);\n     updateStocksDatabase(records);\n    //  console.log(stocksDatabase);\n   }\n \n   getRecords();\n  //  console.log(userPickedStocks);\n   var copyIndustries = [];\n   Object.entries(displayedIndustries).forEach(([industry, stocks]) => copyIndustries.push(industry));\n   updateIndustries(copyIndustries);\n   return;\n }, [userPickedStocks, displayedIndustries]);\n\n\n \n    return (\n    <div className=\"homepageMain\">\n\n\n    <AddStock userPickedStocks = {userPickedStocks} updateUserPickedStocks = {updateUserPickedStocks}\n    stocksDatabase = {stocksDatabase} updateStocksDatabase = {updateStocksDatabase} \n    displayedIndustries = {displayedIndustries} \n    updateDisplayedIndustries = {updateDisplayedIndustries}/>\n\n\n    <div className=\"stockHomepage\">\n\n\n    {industries.map((industry) => \n    <StockBox userPickedStocks = {userPickedStocks} updateUserPickedStocks = {updateUserPickedStocks}\n    displayedIndustries = {displayedIndustries} updateDisplayedIndustries = {updateDisplayedIndustries} \n    industry = {industry}/> \n    )}\n\n    {/* <StockBox userPickedStocks = {userPickedStocks} updateUserPickedStocks = {updateUserPickedStocks}\n    displayedIndustries = {displayedIndustries} updateDisplayedIndustries = {updateDisplayedIndustries} /> */}\n\n\n    </div>\n       \n\n    </div>\n  );\n}\n\nexport default Homepage;\n"],"mappings":";;AAEA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,GAAG;EAAA;EAEhB;;EAEA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,gBAAgB,EAAEC,sBAAsB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC/D,MAAM,CAACK,cAAc,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACO,mBAAmB,EAAEC,yBAAyB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrE,MAAM,CAACS,UAAU,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAGtD;EACAC,SAAS,CAAC,MAAM;IACd,eAAeU,UAAU,GAAG;MAE1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,CAAC;MAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAAC;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MACtC;MACCd,oBAAoB,CAACa,OAAO,CAAC;MAC9B;IACD;;IAEAR,UAAU,EAAE;IACb;IACC,IAAIU,cAAc,GAAG,EAAE;IACvBC,MAAM,CAACC,OAAO,CAAChB,mBAAmB,CAAC,CAACiB,OAAO,CAAC;MAAA,IAAC,CAACC,QAAQ,EAAEC,MAAM,CAAC;MAAA,OAAKL,cAAc,CAACM,IAAI,CAACF,QAAQ,CAAC;IAAA,EAAC;IAClGf,gBAAgB,CAACW,cAAc,CAAC;IAChC;EACF,CAAC,EAAE,CAAClB,gBAAgB,EAAEI,mBAAmB,CAAC,CAAC;EAIxC,oBACA;IAAK,SAAS,EAAC,cAAc;IAAA,wBAG7B,QAAC,QAAQ;MAAC,gBAAgB,EAAIJ,gBAAiB;MAAC,sBAAsB,EAAIC,sBAAuB;MACjG,cAAc,EAAIC,cAAe;MAAC,oBAAoB,EAAIC,oBAAqB;MAC/E,mBAAmB,EAAIC,mBAAoB;MAC3C,yBAAyB,EAAIC;IAA0B;MAAA;MAAA;MAAA;IAAA,QAAE,eAGzD;MAAK,SAAS,EAAC,eAAe;MAAA,UAG7BC,UAAU,CAACmB,GAAG,CAAEH,QAAQ,iBACzB,QAAC,QAAQ;QAAC,gBAAgB,EAAItB,gBAAiB;QAAC,sBAAsB,EAAIC,sBAAuB;QACjG,mBAAmB,EAAIG,mBAAoB;QAAC,yBAAyB,EAAIC,yBAA0B;QACnG,QAAQ,EAAIiB;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IACtB;MAAA;MAAA;MAAA;IAAA,QAMK;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAEV;AAAC,GAnFQvB,QAAQ;AAAA,KAARA,QAAQ;AAqFjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}